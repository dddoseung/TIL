그리디 알고리즘(탐욕 알고리즘)?
: 매번의 선택에서 가장 좋아보이는 선택을 하여 적절한 답을 찾아간다
  But, 하지만 항상 최적의 해를 도출해내는 것은 아니다

   -> 그리디 알고리즘 문제의 특징
         1) 이전의 탐욕 선택이 이후의 선택에 영향을 주지 않는다(독립적이다)
	ex)서울에서 부산으로 이어지는 경로는 서울-대전-부산 경로밖에 없다. 즉, 서울-대전과 
	대전-부산의 경로는 각 독립적이기 때문에 서울-대전 경로에서 어떤 것을 선택하느냐에 
	따라서 대전-부산 경로의 선택에 영향을 미치지 않는다.

         2) 전체 최적해가 부분 문제에 대해서도 최적해를 만족한다
	ex)서울-대전을 잇는 경로와 서울-원주를 잇는 경로로 나뉘게 된다. 그렇게 되면, 이후 선택	지는 대전-부산 또는 원주-부산경로로 나뉘게 되는데, 이는 처음 선택했던 경로에 따라 결정		할 수 있는 경로에 영향을 미치기 때문에 독립적이지 않게 된다. 



	결과적으로, 독립적이지 않단 것은 전체 최적해에 대해 부분 문제 또한 독립적이지 않아
	항상 최적해를 만족하지 않는 것이다.


     -> 동적계획법과 달리 최적해를 100% 보장해주진 못하지만 각 순간별 최적 선택을 하기 때문에 	근사 해를 구하는 속도가 매우 빠르다는 것이다. 
	그래서 동적계획법과 그리디 알고리즘은 서로 상호보완하여 같이 쓰이기도 한다.